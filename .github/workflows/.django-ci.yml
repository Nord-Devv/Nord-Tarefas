name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

        - name: Set up environment variables
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          USE_S3: ${{ secrets.USE_S3 }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        run: |
          echo "SECRET_KEY=$SECRET_KEY" >> $GITHUB_ENV
          echo "DEBUG=True" >> $GITHUB_ENV
          echo "dbname=$DB_NAME" >> $GITHUB_ENV
          echo "user=$DB_USER" >> $GITHUB_ENV
          echo "password=$DB_PASSWORD" >> $GITHUB_ENV
          echo "host=$DB_HOST" >> $GITHUB_ENV
          echo "port=$DB_PORT" >> $GITHUB_ENV
          echo "USE_S3=$USE_S3" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME" >> $GITHUB_ENV

    - name: Run migrations
      run: python manage.py migrate

    - name: Run tests
      run: python manage.py test

    - name: Check code quality with flake8
      run: |
        pip install flake8
        flake8 .